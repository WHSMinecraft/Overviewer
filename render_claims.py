#!/usr/bin/env python3

import yaml
import glob
import os
import json
import requests


claimdata = os.path.expanduser("/srv/minecraft/survival/plugins/GriefPreventionData/ClaimData/")

regionfile = os.path.expanduser("./Render/regions.js")



playercache = {}
def getPlayerName(uuid):
    if uuid in playercache:
        return playercache[uuid]

    request = requests.get("https://api.mojang.com/user/profiles/%s/names" % uuid).json()
    currentname = request[-1].get('name')
    playercache[uuid] = currentname
    return currentname


regiondata = []

center = (-335, 80, -195)
radius = 50000
crop = (center[0]-radius, center[2]-radius, center[0]+radius, center[2]+radius)


for f in glob.glob(claimdata + '*.yml'):
    with open(f) as c:
        data = yaml.load(c, Loader=yaml.FullLoader)

        arr1 = data['Lesser Boundary Corner'].split(';')
        if arr1[0] != 'world':
            print("Found a claim not from the overworld. Skipping...")
            continue

        lbc = (int(arr1[1]), int(arr1[2]), int(arr1[3]))

        arr2 = data['Greater Boundary Corner'].split(';')
        gbc = (int(arr2[1]), int(arr2[2]), int(arr2[3]))

        # Outside tiles/map
        if gbc[0] < crop[0] or gbc[2] < crop[1] or lbc[0] > crop[2] or lbc[2] > crop[3]:
            continue

        uuid = data['Owner']

        # Not rendering subclaims, not really worth the effort
        subclaim = uuid == '' and data['Parent Claim ID'] != -1
        if subclaim:
            continue

        admin = uuid == ''
        hovertext = ''

        if (admin):
            owner = '[ADMIN]'
            hovertext  = owner
        elif not subclaim:
            owner = getPlayerName(uuid)
            hovertext = '<div><img src="https://crafatar.com/avatars/' + uuid + '?size=16&overlay=true" /> ' + owner + '</div>'

        # y_level = max(lbc[1], gbc[1])
        y_level = 70

        regiondata.append(dict(
            hovertext=hovertext,
            strokeColor='#00b3ff' if admin else '#ff7800',
            strokeWeight=2,
            fill=True,
            points=[
                {'x': lbc[0], 'y': y_level, 'z': lbc[2]},
                {'x': gbc[0], 'y': y_level, 'z': lbc[2]},
                {'x': gbc[0], 'y': y_level, 'z': gbc[2]},
                {'x': lbc[0], 'y': y_level, 'z': gbc[2]},
                {'x': lbc[0], 'y': y_level, 'z': lbc[2]}
            ]
        ))

with open(regionfile, "w") as r:
    r.write('// Generated by script, do not edit\n')
    r.write('\n')
    r.write('var groupName = "claims"\n')
    r.write('var displayName = "Claims"\n')
    r.write('var world = "overworldday"\n')
    r.write('\n')
    r.write('markersDB[groupName] = {\n')
    r.write('    "name": groupName,\n')
    r.write('    "created": false,\n')
    r.write('    "raw":\n')
    json.dump(regiondata, r, indent=4)
    r.write('}\n')
    r.write('\n')
    r.write('markers[world].push({\n')
    r.write('    "groupName": groupName,\n')
    r.write('    "icon": "/assets/gp_logo.jpg",\n')
    r.write('    "createInfoWindow": false,\n')
    r.write('    "showIconInLegend": true,\n')
    r.write('    "displayName": displayName\n')
    r.write('});\n')
